---
- hosts: localhost
  connection: local

  tasks:
    - pause:
        prompt: "Enter password"
        echo: no
      when: password is undefined
      register: password_input

    - set_fact:
        password: "{{ password_input.user_input }}"
      when: password is undefined

    - set_fact:
        count: "{{ 100 | random }}"
      run_once: yes

    - name: 'Linux - Create virtual network'
      azure_rm_virtualnetwork:
        resource_group: ansible
        name: vnet-linux
        address_prefixes: "10.0.0.0/16"

    - name: 'Linux - Add subnet'
      azure_rm_subnet:
        resource_group: ansible
        name: snet-linux
        address_prefix: "10.0.1.0/24"
        virtual_network: vnet-linux

    - name: 'Linux - Create public IP address'
      azure_rm_publicipaddress:
        resource_group: ansible
        allocation_method: Static
        domain_name: "vm-linuxweb2{{ count }}"
        name: pip-linux
      register: output_ip_address

    - name: Output public IP
      debug:
        msg: "The public IP is {{ output_ip_address.state.ip_address }}"

    - name: 'Linux - Create Network Security Group'
      azure_rm_securitygroup:
        resource_group: ansible
        name: nsg-linux
        rules:
          - name: SSH
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 1001
            direction: Inbound
          - name: 'allow_web_traffic'
            protocol: Tcp
            destination_port_range:
              - 80
              - 443
            access: Allow
            priority: 1002
            direction: Inbound

    - name: 'Linux - Create virtual network interface card'
      azure_rm_networkinterface:
        resource_group: ansible
        name: nic-linux
        virtual_network: vnet-linux
        subnet: snet-linux
        security_group: nsg-linux
        ip_configurations:
          - name: linux-ipconfig
            public_ip_name: pip-linux
            primary: True

    - name: 'Linux - Create VM'
      azure_rm_virtualmachine:
        resource_group: ansible
        name: "vm-linuxweb{{ count }}"
        vm_size: Standard_DS1_v2
        admin_username: ansible
        admin_password: "{{ password }}"
        ssh_password_enabled: true
        network_interfaces: nic-linux
        #custom_data: "{{ lookup('file', 'cloud-init.yml') }}"
        image:
          offer: CentOS
          publisher: OpenLogic
          sku: '8.0'
          version: latest

    - name: Linux - update sudoers
      azure_rm_virtualmachineextension:
        name: update-sudoers
        resource_group: ansible
        virtual_machine_name: "vm-linuxweb{{ count }}"
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: '2.0'
        settings: '{"fileUris": ["https://raw.githubusercontent.com/Duffney/becomeansible/master/chapter-03/azure/update-sudoers.sh"],"commandToExecute": "bash update-sudoers.sh"}'
        auto_upgrade_minor_version: true
